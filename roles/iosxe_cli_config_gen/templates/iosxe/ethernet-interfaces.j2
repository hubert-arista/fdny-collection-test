{#
 Copyright (c) 2023 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# iosxe - ethernet interfaces #}
{% if ethernet_interfaces is arista.avd.defined %}
{% for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
!
interface {{ ethernet_interface.name }}
{%     if ethernet_interface.description is arista.avd.defined %}
 description {{ ethernet_interface.description }}
{%     endif %}
{%     if ethernet_interface.type is arista.avd.defined('routed') %}
 no switchport
{%     endif %}
{%     if ethernet_interface.mtu is arista.avd.defined %}
 mtu {{ ethernet_interface.mtu }}
{%     endif %}
{%     if ethernet_interface.encapsulation_dot1q_vlan is arista.avd.defined %}
 encapsulation dot1Q {{ ethernet_interface.encapsulation_dot1q_vlan }}
{%     endif %}
{%     if ethernet_interface is arista.avd.defined('trunk') %}
{%         if ethernet_interface.vlans is arista.avd.defined %}
 switchport trunk allowed vlan {{ ethernet_interface.vlans }}
{%         endif %}
{%     endif %}
{%     if ethernet_interface.vlans is arista.avd.defined %}
 switchport access vlan {{ ethernet_interface.vlans }}
{%     endif %}
{%     if ethernet_interface.mode is arista.avd.defined %}
 switchport mode {{ ethernet_interface.mode }}
{%     endif %}
{%     if ethernet_interface.channel_group.id is arista.avd.defined and ethernet_interface.channel_group.mode is arista.avd.defined %}
 channel-group {{ ethernet_interface.channel_group.id }} mode {{ ethernet_interface.channel_group.mode }}
{%     endif %}
{%     if ethernet_interface.vrf is arista.avd.defined %}
 vrf forwarding {{ ethernet_interface.vrf }}
{%     endif %}
{%     if ethernet_interface.ip_address is arista.avd.defined %}
 ip address {{ ethernet_interface.ip_address | arista.fdny_automation.cidr_to_ip_mask }}
{%     endif %}
{%     if ethernet_interface.shutdown is arista.avd.defined(true)  %}
 shutdown
{%     endif %}
{%     if ethernet_interface.spanning_tree_portfast is arista.avd.defined('edge') %}
 spanning-tree portfast
{%     elif ethernet_interface.spanning_tree_portfast is arista.avd.defined('network') %}
 spanning-tree portfast network
{%     endif %}
{%     if ethernet_interface.pim.ipv4.sparse_mode is arista.avd.defined(true) %}
 ip pim sparse-mode
{%     endif %}
{%     if ethernet_interface.bfd.interval is arista.avd.defined and
          ethernet_interface.bfd.min_rx is arista.avd.defined and
          ethernet_interface.bfd.multiplier is arista.avd.defined %}
 bfd interval {{ ethernet_interface.bfd.interval }} min_rx {{ ethernet_interface.bfd.min_rx }} multiplier {{ ethernet_interface.bfd.multiplier }}
{%     endif %}
{%     if ethernet_interface.eos_cli is arista.avd.defined  %}
{%         for line in ethernet_interface.eos_cli.split("\\n") %}
 {{ line }}
{%         endfor %}
{%     endif %}
{% endfor %}
{% endif %}
